import Utils from"./utils";export default(e,t)=>{const o=(t,o)=>{const r=e[t]||{actions:new Set};return r.close?r.close():e[t]=r,r.emitter={get eventType(){return t},emit:(...e)=>{r.actions.forEach(t=>t(...e))},isEmpty:()=>r.actions.size<1,clear(){r.actions.clear()},onAddListener:e=>e,onRemoveListener:e=>{}},r.close=o(r.emitter),r.addListener=(e=>(e=r.emitter.onAddListener(e),r.actions.add(e),{remove(){r.actions.delete(e),r.emitter.onRemoveListener(e)}})),r.toString=(()=>t),{get name(){return t},close:r.close,clear:r.emitter.clear,addListener:r.addListener,emit:r.emitter.emit,toString:r.toString}};return{createEventProfile:o,createEventManager:e=>{const r={};return Object.keys(e).forEach(n=>{const s=e[n];if("function"==typeof s)return void(r[n]=o(n,s));const i=s.sameas||n,c=e=>{const t=o(i,e);r[i]=t,s.sameas&&(r[n]=t)};if(!s.local)return s.forever?("function"!=typeof s.forever&&(s.forever=(e=>(...t)=>e.emit(...t))),void c(e=>{const o={subscription:t.addListener(i,s.forever(e))};return()=>{o.subscription&&(o.subscription.remove(),o.subscription=null,e.onClose&&e.onClose())}})):s.always?("function"!=typeof s.always&&(s.always=(e=>(...t)=>e.emit(...t))),void c(e=>{const o={},r=()=>{o.subscription&&(o.subscription.remove(),o.subscription=null,e.onClose&&e.onClose())};return e.onAddListener=(r=>(o.subscription||(o.subscription=t.addListener(i,s.always(e))),r)),e.onRemoveListener=(t=>{e.isEmpty()&&r()}),r})):void 0;c(e=>()=>{})}),r}}};